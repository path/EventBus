apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
}

// provided is not supported in Gradle 1.4, see http://issues.gradle.org/browse/GRADLE-784
// Like this, it won't appear at all in the POM
configurations {
    provided
}

dependencies {
    provided 'com.google.android:android:4.1.1.4'
    provided 'com.google.android:android-test:4.1.1.4'
    provided 'com.google.android:annotations:4.1.1.4'
    provided 'com.google.android:support-v4:r7'
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        java {
            srcDir 'src'
            exclude 'de/greenrobot/event/util/**'
        }
    }
}

javadoc {
    classpath += configurations.provided
    title = "EventBus ${version} API"
	options.bottom = 'Available under the Apache License, Version 2.0 - <i>Copyright &#169; 2012-2013 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

def deployToProd = hasProperty("pathMaven.deployToProd") && project.ext["pathMaven.deployToProd"].toBoolean()
println "will deploy to prod?" + deployToProd

uploadArchives {
    repositories {
        mavenDeployer {
            if(deployToProd) {
                snapshotRepository(url: project.ext["pathMaven.repo.snapshots"]) {
                    authentication(userName: project.ext["pathMaven.username"], password: project.ext["pathMaven.password"]);
                }

                repository(url: project.ext["pathMaven.repo.releases"]) {
                    authentication(userName: project.ext["pathMaven.username"], password: project.ext["pathMaven.password"]);
                }
            } else {
                repository(url: mavenLocal().getUrl())
            }
            pom.project {
               groupId = 'de.greenrobot'
               artifactId= 'eventbus'
               version = '2.0.2.5'
                
               description 'EventBus is an Android optimized publish/subscribe event bus.'
               url 'https://plus.google.com/b/114381455741141514652/communities/114594359857596138845/stream/2f784373-19d9-4a0d-840f-787794a410bc'

               scm {
                   url 'https://github.com/path/EventBus'
                   connection 'scm:git@github.com:path/EventBus.git'
                   developerConnection 'scm:git@github.com:path/EventBus.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'greenrobot'
                       name 'greenrobot'
                   }
               }
           }
        }
    }
}
